From bcf50500814badb6fc4fb903ed12bfce22367e0e Mon Sep 17 00:00:00 2001
From: Tiago Vignatti <tiago.vignatti@intel.com>
Date: Mon, 1 Jul 2013 19:10:53 -0300
Subject: [PATCH 1/3] Chromium: Implement Wayland factory

TODO: the idea is to split this patch in several, submitting a few upstream.

Signed-off-by: Tiago Vignatti <tiago.vignatti@intel.com>
---
 build/common.gypi                     |    6 ++++++
 ui/aura/aura.gyp                      |    5 +++++
 ui/aura/root_window_host_ozone.cc     |    9 ++++++++-
 ui/base/ozone/surface_factory_ozone.h |   13 +++++++------
 ui/gl/gl_implementation.h             |    4 ++--
 ui/gl/gl_surface_egl.cc               |    8 +++-----
 6 files changed, 31 insertions(+), 14 deletions(-)

diff --git a/build/common.gypi b/build/common.gypi
index 4480378..9fc7db3 100644
--- a/build/common.gypi
+++ b/build/common.gypi
@@ -138,6 +138,12 @@
             'toolkit_uses_gtk%': 0,
           }],
 
+          ['use_ozone==1', {
+            'dependencies': [
+              '<(DEPTH)/ozone/ozone_impl.gyp:wayland',
+            ]
+          }],
+
           # Enable HiDPI on Mac OS and Chrome OS.
           ['OS=="mac" or chromeos==1', {
             'enable_hidpi%': 1,
diff --git a/ui/aura/aura.gyp b/ui/aura/aura.gyp
index 7915d09..66e0dd6 100644
--- a/ui/aura/aura.gyp
+++ b/ui/aura/aura.gyp
@@ -130,6 +130,11 @@
             '../../ipc/ipc.gyp:ipc',
           ],
         }],
+        ['use_ozone==1', {
+          'dependencies': [
+            '../../ozone/ozone_impl.gyp:wayland',
+          ]
+        }],
       ],
     },
     {
diff --git a/ui/aura/root_window_host_ozone.cc b/ui/aura/root_window_host_ozone.cc
index 2e046bc..309b92e 100644
--- a/ui/aura/root_window_host_ozone.cc
+++ b/ui/aura/root_window_host_ozone.cc
@@ -5,6 +5,7 @@
 #include "ui/aura/root_window_host_ozone.h"
 
 #include "ui/aura/root_window.h"
+#include "ui/base/ozone/surface_factory_ozone.h"
 
 namespace aura {
 
@@ -41,7 +42,13 @@ RootWindow* RootWindowHostOzone::GetRootWindow() {
 gfx::AcceleratedWidget RootWindowHostOzone::GetAcceleratedWidget() {
   // TODO(rjkroege): Support more than one screen. Screen ids start at 1 and
   // increase for each screen.
-  return (gfx::AcceleratedWidget)1;
+
+  gfx::AcceleratedWidget w =
+    ui::SurfaceFactoryOzone::GetInstance()->GetAcceleratedWidget();
+
+  ui::SurfaceFactoryOzone::GetInstance()->AcceleratedWidgetResize(w, bounds_);
+
+  return w;
 }
 
 void RootWindowHostOzone::Show() { NOTIMPLEMENTED(); }
diff --git a/ui/base/ozone/surface_factory_ozone.h b/ui/base/ozone/surface_factory_ozone.h
index b9e4403..c57450e 100644
--- a/ui/base/ozone/surface_factory_ozone.h
+++ b/ui/base/ozone/surface_factory_ozone.h
@@ -7,6 +7,7 @@
 
 #include "ui/base/ui_export.h"
 #include "ui/gfx/native_widget_types.h"
+#include "ui/gfx/rect.h"
 
 namespace gfx {
 class VSyncProvider;
@@ -16,8 +17,8 @@ namespace ui {
 
 class SurfaceFactoryOzone {
  public:
-  SurfaceFactoryOzone();
-  virtual ~SurfaceFactoryOzone();
+  UI_EXPORT SurfaceFactoryOzone();
+  UI_EXPORT virtual ~SurfaceFactoryOzone();
 
   // Returns the instance
   UI_EXPORT static SurfaceFactoryOzone* GetInstance();
@@ -32,7 +33,7 @@ class SurfaceFactoryOzone {
   // TODO(rjkroege): Add a status code if necessary.
   // Configures the display hardware. Must be called from within the GPU
   // process before the sandbox has been activated.
-  virtual void InitializeHardware() = 0;
+  virtual intptr_t InitializeHardware() = 0;
 
   // Cleans up display hardware state. Call this from within the GPU process.
   // This method must be safe to run inside of the sandbox.
@@ -52,10 +53,10 @@ class SurfaceFactoryOzone {
   // Sets up GL bindings for the native surface.
   virtual bool LoadEGLGLES2Bindings() = 0;
 
-  // Tests if the given AcceleratedWidget instance can be resized. (Native
+  // Check if AcceleratedWidget instance can be resized. (Native
   // hardware may only support a single fixed size.)
-  // Perhaps, this should be "attempt to resize the accelerated widget"?
-  virtual bool AcceleratedWidgetCanBeResized(gfx::AcceleratedWidget w) = 0;
+  virtual bool AcceleratedWidgetResize(gfx::AcceleratedWidget w,
+      const gfx::Rect& bounds) = 0;
 
   // Returns a gfx::VsyncProvider for the provided AcceleratedWidget. Note
   // that this may be called after we have entered the sandbox so if there are
diff --git a/ui/gl/gl_implementation.h b/ui/gl/gl_implementation.h
index 2129782..bedfa9d 100644
--- a/ui/gl/gl_implementation.h
+++ b/ui/gl/gl_implementation.h
@@ -70,13 +70,13 @@ GLImplementation GetNamedGLImplementation(const std::string& name);
 const char* GetGLImplementationName(GLImplementation implementation);
 
 // Add a native library to those searched for GL entry points.
-void AddGLNativeLibrary(base::NativeLibrary library);
+GL_EXPORT void AddGLNativeLibrary(base::NativeLibrary library);
 
 // Unloads all native libraries.
 void UnloadGLNativeLibraries();
 
 // Set an additional function that will be called to find GL entry points.
-void SetGLGetProcAddressProc(GLGetProcAddressProc proc);
+GL_EXPORT void SetGLGetProcAddressProc(GLGetProcAddressProc proc);
 
 // Find a core (non-extension) entry point in the current GL implementation. On
 // EGL based implementations core entry points will not be queried through
diff --git a/ui/gl/gl_surface_egl.cc b/ui/gl/gl_surface_egl.cc
index 18e5406..6c5e3a2 100644
--- a/ui/gl/gl_surface_egl.cc
+++ b/ui/gl/gl_surface_egl.cc
@@ -101,10 +101,8 @@ bool GLSurfaceEGL::InitializeOneOff() {
     return true;
 
 #if defined (USE_OZONE)
-  ui::SurfaceFactoryOzone::GetInstance()->InitializeHardware();
-#endif
-
-#if defined(USE_X11)
+  g_native_display = ui::SurfaceFactoryOzone::GetInstance()->InitializeHardware();
+#elif defined(USE_X11)
   g_native_display = base::MessagePumpForUI::GetDefaultXDisplay();
 #elif defined(OS_WIN)
   g_native_display = EGL_DEFAULT_DISPLAY;
@@ -135,7 +133,7 @@ bool GLSurfaceEGL::InitializeOneOff() {
     EGL_GREEN_SIZE, 8,
     EGL_RED_SIZE, 8,
     EGL_RENDERABLE_TYPE, EGL_OPENGL_ES2_BIT,
-    EGL_SURFACE_TYPE, EGL_WINDOW_BIT | EGL_PBUFFER_BIT,
+    EGL_SURFACE_TYPE, EGL_WINDOW_BIT,
     EGL_NONE
   };
 
-- 
1.7.9.5

