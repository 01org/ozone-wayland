From 913dfe207ab11d06c5e314a43f26bfb67e749f15 Mon Sep 17 00:00:00 2001
From: Tiago Vignatti <tiago.vignatti@intel.com>
Date: Mon, 21 Oct 2013 17:41:08 +0300
Subject: [PATCH 1/6] Desktop capture API should support Ozone meta-platform
 as well

r27563004 has enabled mouse cursor for desktop capture API but WebRTC doesn't
have stub procedures for unsupported platforms like Ozone, among others. The
probable correct fix is to have WebRTC supporting it but in the mean time we
should fix Ozone in Chromium.

BUG=173265
---
 .../renderer_host/media/desktop_capture_device.cc  |    6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/content/browser/renderer_host/media/desktop_capture_device.cc b/content/browser/renderer_host/media/desktop_capture_device.cc
index 6303f21..95f1b33 100644
--- a/content/browser/renderer_host/media/desktop_capture_device.cc
+++ b/content/browser/renderer_host/media/desktop_capture_device.cc
@@ -369,9 +369,15 @@ scoped_ptr<media::VideoCaptureDevice> DesktopCaptureDevice::Create(
       scoped_ptr<webrtc::WindowCapturer> window_capturer(
           webrtc::WindowCapturer::Create(options));
       if (window_capturer && window_capturer->SelectWindow(source.id)) {
+    // WebRTC's CreateForWindow supports only these three platforms below and
+    // fails for any different in which Ozone could be implementing.
+#if defined(OS_WIN) || defined(OS_MACOSX) || defined(USE_X11)
         capturer.reset(new webrtc::DesktopAndCursorComposer(
             window_capturer.release(),
             webrtc::MouseCursorMonitor::CreateForWindow(options, source.id)));
+#else
+        capturer.reset(window_capturer.release());
+#endif
       }
       break;
     }
-- 
1.7.9.5

