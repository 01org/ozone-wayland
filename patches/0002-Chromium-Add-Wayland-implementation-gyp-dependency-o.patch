From 637ad06e9cad5aaccd6d39ee3184f98da7b93cd3 Mon Sep 17 00:00:00 2001
From: Tiago Vignatti <tiago.vignatti@intel.com>
Date: Mon, 1 Jul 2013 19:10:53 -0300
Subject: [PATCH 2/7] Chromium: Add Wayland implementation gyp dependency on
 Ozone

Signed-off-by: Tiago Vignatti <tiago.vignatti@intel.com>
---
 build/common.gypi                        |    6 ++++++
 content/shell/app/shell_main_delegate.cc |    6 ++++++
 ui/aura/aura.gyp                         |    5 +++++
 ui/aura/demo/demo_main.cc                |    6 ++++++
 4 files changed, 23 insertions(+)

diff --git a/build/common.gypi b/build/common.gypi
index 62aa480..f0c3f9b 100644
--- a/build/common.gypi
+++ b/build/common.gypi
@@ -138,6 +138,12 @@
             'toolkit_uses_gtk%': 0,
           }],
 
+          ['use_ozone==1', {
+            'dependencies': [
+              '<(DEPTH)/ozone/ozone_impl.gyp:wayland',
+            ]
+          }],
+
           # Enable HiDPI on Mac OS and Chrome OS.
           ['OS=="mac" or chromeos==1', {
             'enable_hidpi%': 1,
diff --git a/content/shell/app/shell_main_delegate.cc b/content/shell/app/shell_main_delegate.cc
index bcef628..0e41a1d 100644
--- a/content/shell/app/shell_main_delegate.cc
+++ b/content/shell/app/shell_main_delegate.cc
@@ -24,6 +24,8 @@
 #include "ui/base/ui_base_switches.h"
 #include "ui/gl/gl_switches.h"
 
+#include "ozone/surface_factory_wayland.h"
+
 #include "ipc/ipc_message.h"  // For IPC_MESSAGE_LOG_ENABLED.
 
 #if defined(IPC_MESSAGE_LOG_ENABLED)
@@ -166,6 +168,10 @@ bool ShellMainDelegate::BasicStartupComplete(int* exit_code) {
 
 void ShellMainDelegate::PreSandboxStartup() {
   InitializeResourceBundle();
+
+  /* TODO: Implementation specific. Has to go away */
+  ui::SurfaceFactoryOzone *o_factory = new ui::SurfaceFactoryWayland ();
+  ui::SurfaceFactoryOzone::SetInstance(o_factory);
 }
 
 int ShellMainDelegate::RunProcess(
diff --git a/ui/aura/aura.gyp b/ui/aura/aura.gyp
index 7915d09..66e0dd6 100644
--- a/ui/aura/aura.gyp
+++ b/ui/aura/aura.gyp
@@ -130,6 +130,11 @@
             '../../ipc/ipc.gyp:ipc',
           ],
         }],
+        ['use_ozone==1', {
+          'dependencies': [
+            '../../ozone/ozone_impl.gyp:wayland',
+          ]
+        }],
       ],
     },
     {
diff --git a/ui/aura/demo/demo_main.cc b/ui/aura/demo/demo_main.cc
index aea286e..3d317bc 100644
--- a/ui/aura/demo/demo_main.cc
+++ b/ui/aura/demo/demo_main.cc
@@ -22,6 +22,8 @@
 #include "ui/gfx/canvas.h"
 #include "ui/gfx/rect.h"
 
+#include "ozone/surface_factory_wayland.h"
+
 #if defined(USE_X11)
 #include "base/message_loop/message_pump_aurax11.h"
 #endif
@@ -107,6 +109,10 @@ class DemoStackingClient : public aura::client::StackingClient {
 };
 
 int DemoMain() {
+  /* TODO: Implementation specific. Has to go away */
+  ui::SurfaceFactoryOzone *o_factory = new ui::SurfaceFactoryWayland ();
+  ui::SurfaceFactoryOzone::SetInstance(o_factory);
+
   // Create the message-loop here before creating the root window.
   base::MessageLoop message_loop(base::MessageLoop::TYPE_UI);
   aura::Env::GetInstance();
-- 
1.7.9.5

