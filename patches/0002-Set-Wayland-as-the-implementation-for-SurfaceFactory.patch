From b3a32216e6f44f5b1ae4523cf8d471ae516b52a0 Mon Sep 17 00:00:00 2001
From: Kondapally Kalyan <kalyan.kondapally@intel.com>
Date: Thu, 12 Sep 2013 12:11:23 +0300
Subject: [PATCH] Set Wayland as the implementation for SurfaceFactoryOzone

The fundamental problem to be solved here is to find a way to set downstream
Ozone implementations (e.g. Wayland) in the upstream code, without changing any
line of code there.

One idea is to make Ozone implementations as modules loadable that could be
picked from a particular directory in the system (is it safe?) or maybe chosen
by command line. There are probably other ways for doing so also. So, before
start investigating this problem, we should contact rjkroege for any advice.

This is patch is a hack and in principle shouldn't be extended much.
---
 build/common.gypi                        |    6 ++++++
 content/shell/app/shell_main_delegate.cc |   15 +++++++++++++++
 ui/aura/aura.gyp                         |    5 +++++
 ui/aura/demo/demo_main.cc                |    9 +++++++++
 4 files changed, 35 insertions(+)

diff --git a/build/common.gypi b/build/common.gypi
index f04e4a9..673dfbc 100644
--- a/build/common.gypi
+++ b/build/common.gypi
@@ -143,6 +143,12 @@
             'toolkit_uses_gtk%': 0,
           }],
 
+          ['use_ozone==1', {
+            'dependencies': [
+              '<(DEPTH)/ozone/ozone_impl.gyp:wayland',
+            ]
+          }],
+
           # Whether we're a traditional desktop unix.
           ['(OS=="linux" or OS=="freebsd" or OS=="openbsd" or OS=="solaris") and chromeos==0', {
             'desktop_linux%': 1,
diff --git a/content/shell/app/shell_main_delegate.cc b/content/shell/app/shell_main_delegate.cc
index 8e60a32..5d9799a 100644
--- a/content/shell/app/shell_main_delegate.cc
+++ b/content/shell/app/shell_main_delegate.cc
@@ -24,6 +24,9 @@
 #include "ui/base/ui_base_switches.h"
 #include "ui/gl/gl_switches.h"
 
+#include "ozone/impl/desktop_factory_wayland.h"
+#include "ozone/impl/ozone_display.h"
+
 #include "ipc/ipc_message.h"  // For IPC_MESSAGE_LOG_ENABLED.
 
 #if defined(IPC_MESSAGE_LOG_ENABLED)
@@ -88,6 +91,12 @@ ShellMainDelegate::ShellMainDelegate() {
 }
 
 ShellMainDelegate::~ShellMainDelegate() {
+  ui::SurfaceFactoryOzone* surface_factory = ui::SurfaceFactoryOzone::GetInstance();
+  if (surface_factory) {
+    surface_factory->ShutdownHardware();
+    ui::SurfaceFactoryOzone::SetInstance(NULL);
+    delete surface_factory;
+  }
 }
 
 bool ShellMainDelegate::BasicStartupComplete(int* exit_code) {
@@ -169,6 +178,12 @@ bool ShellMainDelegate::BasicStartupComplete(int* exit_code) {
 
 void ShellMainDelegate::PreSandboxStartup() {
   InitializeResourceBundle();
+
+  /* TODO: Implementation specific. Has to go away */
+  ui::SurfaceFactoryOzone *o_factory = new ozonewayland::OzoneDisplay();
+  ui::SurfaceFactoryOzone::SetInstance(o_factory);
+  views::DesktopFactoryOzone *d_factory = new ozonewayland::DesktopFactoryWayland();
+  views::DesktopFactoryOzone::SetInstance(d_factory);
 }
 
 int ShellMainDelegate::RunProcess(
diff --git a/ui/aura/aura.gyp b/ui/aura/aura.gyp
index a4fe861..760ff82 100644
--- a/ui/aura/aura.gyp
+++ b/ui/aura/aura.gyp
@@ -128,6 +128,11 @@
             '../../ipc/ipc.gyp:ipc',
           ],
         }],
+        ['use_ozone==1', {
+          'dependencies': [
+            '../../ozone/ozone_impl.gyp:wayland',
+          ]
+        }],
       ],
     },
     {
diff --git a/ui/aura/demo/demo_main.cc b/ui/aura/demo/demo_main.cc
index b2fd97e..b38cf15 100644
--- a/ui/aura/demo/demo_main.cc
+++ b/ui/aura/demo/demo_main.cc
@@ -23,6 +23,8 @@
 #include "ui/gfx/canvas.h"
 #include "ui/gfx/rect.h"
 
+#include "ozone/impl/ozone_display.h"
+
 #if defined(USE_X11)
 #include "base/message_loop/message_pump_x11.h"
 #endif
@@ -108,6 +110,10 @@ class DemoStackingClient : public aura::client::StackingClient {
 };
 
 int DemoMain() {
+  /* TODO: Implementation specific. Has to go away */
+  ui::SurfaceFactoryOzone *o_factory = new ozonewayland::OzoneDisplay();
+  ui::SurfaceFactoryOzone::SetInstance(o_factory);
+
   // Create the message-loop here before creating the root window.
   base::MessageLoop message_loop(base::MessageLoop::TYPE_UI);
   aura::Env::GetInstance();
@@ -148,6 +154,9 @@ int DemoMain() {
   root_window->ShowRootWindow();
   base::MessageLoopForUI::current()->Run();
 
+  o_factory->ShutdownHardware();
+  delete o_factory;
+
   return 0;
 }
 
-- 
1.7.9.5

