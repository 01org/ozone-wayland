From c274d0f2b2fbdb8d17d6de479aac001666a2ae30 Mon Sep 17 00:00:00 2001
From: Kondapally Kalyan <kalyan.kondapally@intel.com>
Date: Tue, 10 Sep 2013 19:33:45 +0300
Subject: [PATCH] Chromium-Add-gl-changes-for-Wayland.

This patch adds basic support needed in NativeViewGLSurfaceEGL to resize  window
and ensure we don't swap before the last swap has been handled. Changes related
to resizing needs more testing before trying to upstream the patch.
---
 ui/gl/gl_surface_egl.cc |   23 ++++++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git a/ui/gl/gl_surface_egl.cc b/ui/gl/gl_surface_egl.cc
index 5f4edf4..37c68f8 100644
--- a/ui/gl/gl_surface_egl.cc
+++ b/ui/gl/gl_surface_egl.cc
@@ -115,8 +115,7 @@ bool GLSurfaceEGL::InitializeOneOff() {
     LOG(ERROR) << "OZONE failed to initialize hardware";
     return false;
   }
-  g_native_display = reinterpret_cast<EGLNativeDisplayType>(
-      surface_factory->GetNativeDisplay());
+  g_native_display = surface_factory->GetNativeDisplay();
 #else
   g_native_display = EGL_DEFAULT_DISPLAY;
 #endif
@@ -140,7 +139,7 @@ bool GLSurfaceEGL::InitializeOneOff() {
     EGL_GREEN_SIZE, 8,
     EGL_RED_SIZE, 8,
     EGL_RENDERABLE_TYPE, EGL_OPENGL_ES2_BIT,
-    EGL_SURFACE_TYPE, EGL_WINDOW_BIT | EGL_PBUFFER_BIT,
+    EGL_SURFACE_TYPE, EGL_WINDOW_BIT,
     EGL_NONE
   };
 
@@ -368,6 +367,12 @@ bool NativeViewGLSurfaceEGL::SwapBuffers() {
     return false;
   }

+#if defined(USE_OZONE)
+  ui::SurfaceFactoryOzone* surface_factory =
+    ui::SurfaceFactoryOzone::GetInstance();
+  surface_factory->SchedulePageFlip(window_);
+#endif
+
   return true;
 }

@@ -392,6 +397,7 @@ bool NativeViewGLSurfaceEGL::Resize(const gfx::Size& size) {
   GLContext* current_context = GLContext::GetCurrent();
   bool was_current =
       current_context && current_context->IsCurrent(this);
+
   if (was_current) {
     scoped_make_current.reset(
         new ui::ScopedMakeCurrent(current_context, this));
@@ -400,6 +406,17 @@ bool NativeViewGLSurfaceEGL::Resize(const gfx::Size& size) {

   Destroy();

+#if defined(USE_OZONE)
+  ui::SurfaceFactoryOzone* surface_factory =
+    ui::SurfaceFactoryOzone::GetInstance();
+
+  surface_factory->AttemptToResizeAcceleratedWidget(window_,
+                                                    gfx::Rect(0, 0, size.width(),
+                                                              size.height()));
+  window_ = ui::SurfaceFactoryOzone::GetInstance()->RealizeAcceleratedWidget(
+      window_);
+#endif
+
   if (!Initialize()) {
     LOG(ERROR) << "Failed to resize window.";
     return false;
-- 
1.7.9.5

