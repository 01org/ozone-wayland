From eb9316f5b06db71debc0949e822997b8ce0c066d Mon Sep 17 00:00:00 2001
From: Kondapally Kalyan <kalyan.kondapally@intel.com>
Date: Fri, 23 May 2014 11:31:24 +0300
Subject: [PATCH] Add needed support in Content.

In Wayland case all window related events need to be sent to GPU process.
We have a minimal IPC implementation, handling messages very specific to
our needs. This patch adds support for the following:

1) Register OzoneChannel and Host as MessageFilters after the succesfull
   launch of GPU and Browser process respectively.
2) Ensure our content related files are compiled as part of
   content_common target.
---
 content/browser/browser_main_loop.cc |   12 ++++++++++++
 content/content_common.gypi          |   19 +++++++++++++++++++
 content/gpu/gpu_main.cc              |    8 ++++++++
 3 files changed, 39 insertions(+)

diff --git a/content/browser/browser_main_loop.cc b/content/browser/browser_main_loop.cc
index 39a1de3..2a69a3e 100644
--- a/content/browser/browser_main_loop.cc
+++ b/content/browser/browser_main_loop.cc
@@ -125,6 +125,7 @@
 #if defined(USE_OZONE)
 #include "ui/ozone/ozone_platform.h"
 #include "ui/events/ozone/event_factory_ozone.h"
+#include "ozone/content/ozone_channel_host_factory.h"
 #endif
 
 // One of the linux specific headers defines this as a macro.
@@ -870,6 +871,11 @@ void BrowserMainLoop::ShutdownThreadsAndCleanUp() {
     TRACE_EVENT0("shutdown", "BrowserMainLoop::Subsystem:GPUChannelFactory");
     if (BrowserGpuChannelHostFactory::instance())
       BrowserGpuChannelHostFactory::Terminate();
+
+#if defined(USE_OZONE)
+    if (OzoneChannelHostFactory::instance())
+      OzoneChannelHostFactory::Terminate();
+#endif
   }
 
   // Must happen after the I/O thread is shutdown since this class lives on the
@@ -1032,6 +1038,12 @@ int BrowserMainLoop::BrowserThreadsStarted() {
 #if defined(OS_MACOSX)
   ThemeHelperMac::GetInstance();
 #endif
+#if defined(USE_OZONE)
+  bool using_gpu_process =
+    !parsed_command_line_.HasSwitch(switches::kSingleProcess) &&
+    !parsed_command_line_.HasSwitch(switches::kInProcessGPU);
+  OzoneChannelHostFactory::Initialize(using_gpu_process);
+#endif
 #endif  // !defined(OS_IOS)
 
   return result_code_;
diff --git a/content/content_common.gypi b/content/content_common.gypi
index 61cc59b..3849260 100644
--- a/content/content_common.gypi
+++ b/content/content_common.gypi
@@ -691,6 +691,25 @@
         },
      ]
     }],
+    ['use_ozone == 1', {
+      'sources': [
+        '<(DEPTH)/ozone/content/event_converter_in_process.h',
+        '<(DEPTH)/ozone/content/event_converter_in_process.cc',
+        '<(DEPTH)/ozone/content/messages.h',
+        '<(DEPTH)/ozone/content/message_generator.h',
+        '<(DEPTH)/ozone/content/message_generator.cc',
+        '<(DEPTH)/ozone/content/ozone_channel.h',
+        '<(DEPTH)/ozone/content/ozone_channel.cc',
+        '<(DEPTH)/ozone/content/ozone_channel_host.h',
+        '<(DEPTH)/ozone/content/ozone_channel_host.cc',
+        '<(DEPTH)/ozone/content/ozone_channel_host_factory.h',
+        '<(DEPTH)/ozone/content/ozone_channel_host_factory.cc',
+        '<(DEPTH)/ozone/content/remote_event_dispatcher.h',
+        '<(DEPTH)/ozone/content/remote_event_dispatcher.cc',
+        '<(DEPTH)/ozone/content/remote_state_change_handler.h',
+        '<(DEPTH)/ozone/content/remote_state_change_handler.cc',
+      ],
+    }],
     ['OS=="win"', {
       'dependencies': [
         '../media/media.gyp:media',
diff --git a/content/gpu/gpu_main.cc b/content/gpu/gpu_main.cc
index 0dac81d..96ff9f2 100644
--- a/content/gpu/gpu_main.cc
+++ b/content/gpu/gpu_main.cc
@@ -51,6 +51,10 @@
 #include "content/public/common/sandbox_init.h"
 #endif
 
+#if defined(USE_OZONE)
+#include "ozone/content/ozone_channel.h"
+#endif
+
 const int kGpuTimeout = 10000;

 namespace content {
@@ -353,6 +357,10 @@ int GpuMain(const MainFunctionParams& parameters) {
   {
     TRACE_EVENT0("gpu", "Run Message Loop");
     main_message_loop.Run();
+#if defined(USE_OZONE)
+    OzoneChannel channel;
+    channel.Register();
+#endif
   }

   child_thread->StopWatchdog();
--
1.7.9.5

