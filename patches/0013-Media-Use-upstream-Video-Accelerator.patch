From 3c2e648b0d83daebda42155ce2daf3cbfeceb476 Mon Sep 17 00:00:00 2001
From: Kalyan Kondapally <kalyan.kondapally@intel.com>
Date: Wed, 4 Mar 2015 03:30:30 -0800
Subject: [PATCH 13/14] Media: Use upstream Video Accelerator.

---
 chrome/browser/password_manager/password_store_factory.cc |  2 +-
 content/common/gpu/media/gpu_video_decode_accelerator.cc  | 10 +++-------
 content/common/sandbox_linux/bpf_gpu_policy_linux.cc      |  2 +-
 3 files changed, 5 insertions(+), 9 deletions(-)

diff --git a/chrome/browser/password_manager/password_store_factory.cc b/chrome/browser/password_manager/password_store_factory.cc
index fba3d00..c29b135 100644
--- a/chrome/browser/password_manager/password_store_factory.cc
+++ b/chrome/browser/password_manager/password_store_factory.cc
@@ -59,7 +59,7 @@ const LocalProfileId kInvalidLocalProfileId =
     static_cast<LocalProfileId>(0);
 #endif
 
-#if defined(USE_LIBSECRET)
+#if defined(USE_LIBSECRET) && !defined(USE_OZONE)
 const char kLibsecretFieldTrialName[] = "Libsecret";
 const char kLibsecretFieldTrialDisabledGroupName[] = "Disabled";
 #endif
diff --git a/content/common/gpu/media/gpu_video_decode_accelerator.cc b/content/common/gpu/media/gpu_video_decode_accelerator.cc
index 0e8af7f..7e3bb60 100644
--- a/content/common/gpu/media/gpu_video_decode_accelerator.cc
+++ b/content/common/gpu/media/gpu_video_decode_accelerator.cc
@@ -42,7 +42,8 @@
 #include "ui/gl/gl_implementation.h"
 #endif
 #elif defined(USE_OZONE)
-#include "media/ozone/media_ozone_platform.h"
+#include "content/common/gpu/media/vaapi_video_decode_accelerator.h"
+#include "ui/gl/gl_implementation.h"
 #elif defined(OS_ANDROID)
 #include "content/common/gpu/media/android_video_decode_accelerator.h"
 #endif
@@ -344,7 +345,7 @@ void GpuVideoDecodeAccelerator::BindImage(uint32 client_texture_id,
 scoped_ptr<media::VideoDecodeAccelerator>
 GpuVideoDecodeAccelerator::CreateVaapiVDA() {
   scoped_ptr<media::VideoDecodeAccelerator> decoder;
-#if defined(OS_CHROMEOS) && defined(ARCH_CPU_X86_FAMILY)
+#if defined(USE_OZONE) && defined(ARCH_CPU_X86_FAMILY)
   decoder.reset(new VaapiVideoDecodeAccelerator(
       make_context_current_, base::Bind(&GpuVideoDecodeAccelerator::BindImage,
                                         base::Unretained(this))));
@@ -366,11 +367,6 @@ GpuVideoDecodeAccelerator::CreateVTVDA() {
 scoped_ptr<media::VideoDecodeAccelerator>
 GpuVideoDecodeAccelerator::CreateOzoneVDA() {
   scoped_ptr<media::VideoDecodeAccelerator> decoder;
-#if !defined(OS_CHROMEOS) && defined(USE_OZONE)
-  media::MediaOzonePlatform* platform =
-      media::MediaOzonePlatform::GetInstance();
-  decoder.reset(platform->CreateVideoDecodeAccelerator(make_context_current_));
-#endif
   return decoder.Pass();
 }
 
diff --git a/content/common/sandbox_linux/bpf_gpu_policy_linux.cc b/content/common/sandbox_linux/bpf_gpu_policy_linux.cc
index 1c65940..fd4cf34 100644
--- a/content/common/sandbox_linux/bpf_gpu_policy_linux.cc
+++ b/content/common/sandbox_linux/bpf_gpu_policy_linux.cc
@@ -312,7 +312,7 @@ bool GpuProcessPolicy::PreSandboxHook() {
       dlopen(I965DrvVideoPath, RTLD_NOW|RTLD_GLOBAL|RTLD_NODELETE);
       dlopen("libva.so.1", RTLD_NOW|RTLD_GLOBAL|RTLD_NODELETE);
 #if defined(USE_OZONE)
-      dlopen("libva-drm.so.1", RTLD_NOW|RTLD_GLOBAL|RTLD_NODELETE);
+      dlopen("libva-wayland.so.1", RTLD_NOW|RTLD_GLOBAL|RTLD_NODELETE);
 #elif defined(USE_X11)
       dlopen("libva-x11.so.1", RTLD_NOW|RTLD_GLOBAL|RTLD_NODELETE);
 #endif
-- 
1.9.1

